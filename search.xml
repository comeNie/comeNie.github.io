<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[linux命令(8)-cp]]></title>
    <url>%2F2017%2F08%2F13%2Flinux%E5%91%BD%E4%BB%A4-8-cp%2F</url>
    <content type="text"><![CDATA[linux命令之ls命令命令格式12cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file target_filecp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file ... target_directory 参数说明 -a，同-pPR 选项. -f，–force 如果目标文件无法打开则将其移除并重试(当-n 选项存在时则不需再选此项) -H，跟随源文件中的命令行符号链接 -i，覆盖前询问 -L,总是跟随符号链接 -n，不要覆盖已存在的文件(使前面的 -i 选项失效) -P，不跟随源文件中的符号链接 -p，等于–preserve=模式,所有权,时间戳–preserve[=属性列表 保持指定的属性(默认：模式,所有权,时间戳)，如果可能保持附加属性：环境、链接、xattr 等 -R，复制目录及目录内的所有项目 -v, 显示执行过程 -X，不要复制扩展信息。]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令(7)-mv]]></title>
    <url>%2F2017%2F08%2F13%2Flinux%E5%91%BD%E4%BB%A4-7-mv%2F</url>
    <content type="text"><![CDATA[linux命令之ls命令命令格式mv [选项] 源文件或目录 目标文件或目录 参数说明 -f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖； -i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖 -u ：若目标文件已经存在，且 source 比较新，才会更新(update) 示例 文件改名mv test test1 移动文件mv test.log test/ 将文件log1.txt,log2.txt,log3.txt移动到目录test3中mv log1.txt log2.txt log3.txt test3mv -t /opt/soft/test/test4/ log1.txt log2.txt log3.txt]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令(6)-rmdir]]></title>
    <url>%2F2017%2F08%2F13%2Flinux%E5%91%BD%E4%BB%A4-6-rmdir%2F</url>
    <content type="text"><![CDATA[linux命令之rmdir命令命令格式rmdir [选项] [目录] 命令说明删除目录必须为空目录，当级联删除目录时，子目录必须也为空 参数说明 -p 递归删除 -v –verbose 显示指令执行过程 示例 删除目录rmdir test 级联删除目录rmdir -p test]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令(5)-rm]]></title>
    <url>%2F2017%2F08%2F09%2Flinux%E5%91%BD%E4%BB%A4-5-rm%2F</url>
    <content type="text"><![CDATA[linux命令之rm命令格式rm [选项] 文件 参数 -f, –force 忽略不存在的文件，从不给出提示。 -i, –interactive 进行交互式删除 -r, -R, –recursive 指示rm将参数中列出的全部目录和子目录均递归地删除。 -v, –verbose 详细显示进行的步骤 –help 显示此帮助信息并退出 –version 输出版本信息并退出 示例 删除文件rm test 强制删除文件rm -f test 递归删除rm -r test 删除以log结尾文件rm *.log 自定义回收站功能 123456myrm()&#123; D=/tmp/$(date +%Y%m%d%H%M%S); mkdir -p $D; mv &quot;$@&quot; $D &amp;&amp; echo &quot;moved to $D ok&quot;; &#125;alias rm=&apos;myrm&apos;]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令(4)-mkdir]]></title>
    <url>%2F2017%2F08%2F09%2Flinux%E5%91%BD%E4%BB%A4-4-mkdir%2F</url>
    <content type="text"><![CDATA[linux命令之mkdir命令格式mkdir [选项] 目录 参数 -m, –mode=模式，设定权限&lt;模式&gt; (类似 chmod)，而不是 rwxrwxrwx 减 umask -p, –parents 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录; -v, –verbose 每次创建新目录都显示信息--help 显示此帮助信息并退出 --version 输出版本信息并退出 示例 创建一个空目录mkdir test 级联创建目录mkdir -p test/test1 创建权限为777的目录mkdir -m 777 test 创建新目录都显示信息mkdir -v test 创建项目的目录结构mkdir mkdir -vp scf/{lib/,bin/,doc/{info,product},logs/{info,product},service/deploy/{info,product}}]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令(3)-pwd]]></title>
    <url>%2F2017%2F08%2F08%2Flinux%E5%91%BD%E4%BB%A4-3-pwd%2F</url>
    <content type="text"><![CDATA[linux命令之pwd命令命令格式pwd [选项] 参数说明一般情况下不带任何参数如果目录是链接时：格式：pwd -P 显示出实际路径，而非使用连接（link）路径。 示例 显示当前目录完成路径pwd 目录连接链接时，pwd -P 显示出实际路径，而非使用连接（link）路径；pwd显示的是连接路径]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令(2)-cd]]></title>
    <url>%2F2017%2F08%2F08%2Flinux%E5%91%BD%E4%BB%A4-2-cd%2F</url>
    <content type="text"><![CDATA[linux命令之cd命令命令格式cd [目录名] 示例 进入根目录cd / 进入上级目录cd .. 进入用户目录cd ~ 进入上一次目录cd - 把上个命令的参数作为cd参数使用cd !$]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iterm快捷键]]></title>
    <url>%2F2017%2F08%2F07%2Fiterm%E5%BF%AB%E6%8D%B7%E9%94%AE%2F</url>
    <content type="text"><![CDATA[iterm快捷键标签 新建标签 command + t 关闭标签 command + w 切换标签 command + 数字 或 command + 左右方向键 查找 command + enter 分屏 垂直分屏 command + d 水平分屏 command + shift + d 切换屏幕 command + option + 方向键 或者 command + [ 或 command + ] 查看历史命令 command + ; 查看剪贴板历史命令 command + shift + h 移动 到行首 ctrl + a 到行尾 ctrl + e 前进后退 ctrl + f/b 编辑 清除当前行 ctrl + u 上一条命令 ctrl + p 或者 !! 搜索命令历史 ctrl + r 删除当前光标的字符 ctrl + d 删除光标之前的字符 ctrl + h 删除光标之前的单词 ctrl + w 删除到文本末尾 ctrl + k 交换光标处文本 ctrl + t 清屏 ctrl + l 或者 command + r 输入开头命令后，command + ;会自动列出输入过的命令 剪贴板历史 command + shift + h]]></content>
      <categories>
        <category>快捷键</category>
      </categories>
      <tags>
        <tag>iterm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令(1)-ls]]></title>
    <url>%2F2017%2F08%2F07%2Flinux%E5%91%BD%E4%BB%A4-1-ls%2F</url>
    <content type="text"><![CDATA[linux命令之ls命令命令格式ls [选项] [目录] 说明： 列出目录中所有的子目录和文件 常用参数 -a, –all 列出目录下的所有文件，包括以 . 开头的隐含文件 -A 同-a，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)。 -c 配合 -lt：根据 ctime 排序及显示 ctime (文件状态最后更改的时间)配合 -l：显示 ctime 但根据名称排序否则：根据 ctime 排序 -C 每栏由上至下列出项目 –color[=WHEN] 控制是否使用色彩分辨文件。WHEN 可以是’never’、’always’或’auto’其中之一 -d, –directory 将目录象文件一样显示，而不是显示其下的文件。 -D, –dired 产生适合 Emacs 的 dired 模式使用的结果 -f 对输出的文件不进行排序，-aU 选项生效，-lst 选项失效 -g 类似 -l,但不列出所有者 -G, –no-group 不列出任何有关组的信息 -h, –human-readable 以容易理解的格式列出文件大小 (例如 1K 234M 2G) –si 类似 -h,但文件大小取 1000 的次方而不是 1024 -H, –dereference-command-line 使用命令列中的符号链接指示的真正目的地 –indicator-style=方式 指定在每个项目名称后加上指示符号&lt;方式&gt;：none (默认)，classify (-F)，file-type (-p) -i, –inode 印出每个文件的 inode 号 -I, –ignore=样式 不印出任何符合 shell 万用字符&lt;样式&gt;的项目 -k 即 –block-size=1K,以 k 字节的形式表示文件的大小。 -l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。 -L, –dereference 当显示符号链接的文件信息时，显示符号链接所指示的对象而并非符号链接本身的信息 -m 所有项目以逗号分隔，并填满整行行宽 -o 类似 -l,显示文件的除组信息外的详细信息。 -r, –reverse 依相反次序排列 -R, –recursive 同时列出所有子目录层 -s, –size 以块大小为单位列出所有文件的大小 -S 根据文件大小排序 –sort=WORD 以下是可选用的 WORD 和它们代表的相应选项： extension -X status -c none -U time -t size -S atime -u time -t access -u version -v use -u -t 以文件修改时间排序 -u 配合 -lt:显示访问时间而且依访问时间排序配合 -l:显示访问时间但根据名称排序否则：根据访问时间排序 -U 不进行排序;依文件系统原有的次序列出项目 -v 根据版本进行排序 -w, –width=COLS 自行指定屏幕宽度而不使用目前的数值 -x 逐行列出项目而不是逐栏列出 -X 根据扩展名排序 -1 每行只列出一个文件 –help 显示此帮助信息并离开 –version 显示版本信息并离开 示例 列举Downloads文件下的所有文件和目录ls -alR ~/Downloads 列举当前目录所有以t开头的文件的详细内容ls -al t* 列举当前文件夹下所有的子目录ls -F ~ | grep /$ 计算当前目录下的文件数和目录数ls -l * |grep &quot;^-&quot;|wc -l ---文件个数ls -l * |grep &quot;^d&quot;|wc -l ---目录个数 在ls中列出文件的绝对路径ls | sed &quot;s:^:pwd/:&quot; 列出当前目录下的所有文件（包括隐藏文件）的绝对路径， 对目录不做递归find $PWD -maxdepth 1 | xargs ls -ld 指定文件时间输出格式ls -tl --time-style=full-isols -ctl --time-style=long-iso]]></content>
      <categories>
        <category>linux每日命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
